c
response
response.body
response.path
response.status
response.body
 post :create, params: { blog_post: attributes_for(:blog_post) }
c
response.body
get :index
c
response.body
reponse.body
get :index
c
request.params
request.id
request
current_user
session["warden.user.user.key"][0][0]
User.find(session["warden.user.user.key"][0][0])
User.find(session["warden.user.user.key"][1][2])
User.find(session["warden.user.user.key"][1][1])
User.find(session["warden.user.user.key"][1][0])
session.warden.userUser.find(session["warden.user.user.key"][1][0])
session.user
session.id
session
session[:login_session_id]
current_user.id
session['user_id']
session[:user_id]
session_url
session_id
c
request
session[:user_id]
current_user.id
c
devise_parameter_sanitizer.permit(:user_update, keys: [:username, :avatar, :email, :password, :password_confirmation])
c
@blog_posts.blank?
@blog_posts.blamk?
@blog_posts.empty?
@blog_posts.nil?
@blog_posts.nill?
@blog_posts = current_user.blog_posts&.where(publication_date: nil).paginate(page: params[:page], per_page: 10)
c
form.submit "#{var1}"
var2 = @blog_post.persisted? ? 'Unpublish' : 'Save as Draft'
var1 = @blog_post.persisted? ? 'Update' : 'Publish'
@blog_post.persisted?
c
blog_post.published?
@blog_post.published?
@blog_post.published
c
cc
z
x
@blog_post.published
@blog_post.published?
c
publisched?
published?
@blog_post.published?
blog_post.published?
blog_post
@blog_post
dd
c
<p class="text-gray-700 mb-4"><%= blog_post.user.username %></p>c
<p class="text-gray-700 mb-4"><%= blog_post.user.username %></p>
blog_post.user.username
blog_post.user
blog_post
c
user_params
c
user_params
params
c
@comment.save!
@comment.save
 @comment = @blog_post.comments.new(comment_params.merge(user_id: current_user&.id))
c
@comment
c
@comment
 @comment.user = current_user
c
n
current_user
current_usert
@blog_post
@comment = @blog_post.comments.new
c
@blog_post
@comment
c
link_to 'Edit', edit_blog_post_comment_path(comment.blog_post, comment)
edit_blog_post_comment_path(comment.blog_post, comment)
comment.blog_post
comment
c
edit_blog_post_comment_path(comment.blog_post, comment)
c
model: [@blog_post, @comment]
edit_blog_post_comment_path(@comment.blog_post, @comment)
edit_blog_post_comment_path(comment.blog_post, comment)
request
c
edit_blog_post_comment_path(comment.blog_post, comment)
c
edit_blog_post_comment_path(comment.blog_post, comment)
c
edit_blog_post_comment_path(comment.blog_post, comment)
comment.blog_post
comment
user_signed_in? && comment.user == current_user
